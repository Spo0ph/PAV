name: IBKR Paper Trading Cash Balance

on:
  workflow_dispatch:

jobs:
  print-paper-balance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Start IBeam Gateway
        run: |
          # Wir holen uns das offizielle IBeam-Image
          docker pull voyz/ibeam:latest

          # Starte den Container mit Credentials aus GitHub Secrets
          docker run -d --name ibgw \
            -e IBEAM_ACCOUNT="${{ secrets.IBEAM_ACCOUNT }}" \
            -e IBEAM_PASSWORD="${{ secrets.IBEAM_PASSWORD }}" \
            -p 5000:5000 voyz/ibeam:latest
            
      - name: Check IBGW Container & Logs
        run: |
          echo "Container-Status:"
          docker ps --filter "name=ibgw"
          echo "--- Logs (letzte 20 Zeilen) ---"
          docker logs --tail 20 ibgw || true

      - name: Wait for Authentication
        run: |
          # Polling bis auth="SUCCESS" zurückkommt
          for i in {1..30}; do
            resp=$(curl -s -k http://localhost:5000/v1/api/iserver/auth/status)
            echo "Try $i: $resp"
            if echo "$resp" | grep -q '"auth":"SUCCESS"'; then
              echo "✅ Authenticated"
              exit 0
            fi
            sleep 5
          done
          echo "❌ Authentication failed" >&2
          exit 1

      - name: Print Paper Trading Cash Balance
        run: |
          # 1) Paper Trading Account ID ermitteln
          ACCOUNT_ID=$(curl -s -k http://localhost:5000/v1/api/iserver/account \
            | jq -r '.[] | select(.accountDesc|test("paper";"i")) | .accountId')
          echo "Paper Trading Account ID: $ACCOUNT_ID"

          # 2) Ledger abrufen und USD.cashbalance ausgeben
          BALANCE=$(curl -s -k http://localhost:5000/v1/api/portfolio/$ACCOUNT_ID/ledger \
            | jq -r '.USD.cashbalance')
          echo "Paper Trading Cash Balance (USD): $BALANCE"